<?php

namespace VivoTest\Util;

//require_once dirname(__FILE__) . '/../../../../src/Vivo/Util/Images.php';

/**
 * Test class for Images.
 * Generated by PHPUnit on 2013-05-12 at 00:32:02.
 */
class ImagesTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Images
     */
    protected $object;

    protected $sourceFolder;

    protected $expectedFolder;

    protected $tmpfile;



    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new \Vivo\Util\Images();
        $this->sourceFolder = __DIR__  . '/images/source/';
        $this->expectedFolder = __DIR__ . '/images/expected/';
        $this->tmpFile = sys_get_temp_dir().'/php_unit_test_'.  md5(microtime());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        if (file_exists($this->tmpFile)) {
            unlink($this->tmpFile);
        }
    }

    /**
     * @covers Vivo\Util\Images::resample
     */
    public function testResampleBW() {
        $options = array ('bw'=> true);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->tmpFile, $options);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->expectedFolder . __FUNCTION__, $options);
        $this->assertFileEquals($this->expectedFolder . __FUNCTION__, $this->tmpFile);
    }

    /**
     * @covers Vivo\Util\Images::resample
     */
    public function testResampleSize() {
        $options = array ('size' => 200);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->tmpFile, $options);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->expectedFolder . __FUNCTION__, $options);
        $this->assertFileEquals($this->expectedFolder . __FUNCTION__, $this->tmpFile);
    }

    /**
     * @covers Vivo\Util\Images::resample
     */
    public function testResampleHeightWidth() {
        $options = array ('height' => 200, 'width' => 300);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->tmpFile, $options);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->expectedFolder . __FUNCTION__, $options);
        $this->assertFileEquals($this->expectedFolder . __FUNCTION__, $this->tmpFile);
    }

    /**
     * @covers Vivo\Util\Images::resample
     */
    public function testResampleHeightWidthCrop() {
        $options = array ('height' => 200, 'width' => 300, 'crop' => true);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->tmpFile, $options);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->expectedFolder . __FUNCTION__, $options);
        $this->assertFileEquals($this->expectedFolder . __FUNCTION__, $this->tmpFile);
    }

    /**
     * @covers Vivo\Util\Images::resample
     */
    public function testResampleRoundCorners() {
        $options = array ('radius' => 100, 'bgcolor'=>'FFFFFF');
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->tmpFile, $options);
        $this->object->resample($this->sourceFolder.'Praga_0003.JPG', $this->expectedFolder . __FUNCTION__, $options);
        $this->assertFileEquals($this->expectedFolder . __FUNCTION__, $this->tmpFile);
    }

    public function testResamplePng() {
        $options = array ('height' => 200, 'outputType' => 'image/png', 'bgcolor'=>'FF0000');
        $this->object->resample($this->sourceFolder.'logo.png', $this->tmpFile, $options);
        $this->object->resample($this->sourceFolder.'logo.png', $this->expectedFolder . __FUNCTION__, $options);
        $this->assertFileEquals($this->expectedFolder . __FUNCTION__, $this->tmpFile);
    }
}

?>
